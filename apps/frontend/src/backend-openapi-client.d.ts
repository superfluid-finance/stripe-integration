/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/stripe/webhook": {
    post: operations["StripeWebhookController_handleWebhook"];
  };
  "/checkout-session/create": {
    post: operations["CheckoutSessionController_createSession"];
  };
  "/superfluid-stripe-converter/product": {
    get: operations["SuperfluidStripeConverterController_mapStripeProductToCheckoutWidget"];
  };
  "/superfluid-stripe-converter/products": {
    get: operations["SuperfluidStripeConverterController_products"];
  };
  "/superfluid-stripe-converter/look-and-feel": {
    get: operations["SuperfluidStripeConverterController_lookAndFeel"];
  };
  "/superfluid-stripe-converter/invoice": {
    get: operations["SuperfluidStripeConverterController_invoice"];
  };
  "/health": {
    get: operations["HealthController_check"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateSessionData: {
      productId: string;
      chainId: number;
      superTokenAddress: string;
      senderAddress: string;
      receiverAddress: string;
      email: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  StripeWebhookController_handleWebhook: {
    parameters: {
      header: {
        "stripe-signature": string;
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  CheckoutSessionController_createSession: {
    parameters: {
      header: {
        "x-api-key": string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateSessionData"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  SuperfluidStripeConverterController_mapStripeProductToCheckoutWidget: {
    parameters: {
      query: {
        "product-id": string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SuperfluidStripeConverterController_products: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  SuperfluidStripeConverterController_lookAndFeel: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  SuperfluidStripeConverterController_invoice: {
    parameters: {
      query: {
        "invoice-id": string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  HealthController_check: {
    responses: {
      /** @description The Health Check is successful */
      200: {
        content: {
          "application/json": {
            /** @example ok */
            status?: string;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   }
             * }
             */
            info?: ({
              [key: string]: {
                status?: string;
                [key: string]: string | undefined;
              };
            }) | null;
            /** @example {} */
            error?: ({
              [key: string]: {
                status?: string;
                [key: string]: string | undefined;
              };
            }) | null;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   }
             * }
             */
            details?: {
              [key: string]: {
                status?: string;
                [key: string]: string | undefined;
              };
            };
          };
        };
      };
      /** @description The Health Check is not successful */
      503: {
        content: {
          "application/json": {
            /** @example error */
            status?: string;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   }
             * }
             */
            info?: ({
              [key: string]: {
                status?: string;
                [key: string]: string | undefined;
              };
            }) | null;
            /**
             * @example {
             *   "redis": {
             *     "status": "down",
             *     "message": "Could not connect"
             *   }
             * }
             */
            error?: ({
              [key: string]: {
                status?: string;
                [key: string]: string | undefined;
              };
            }) | null;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   },
             *   "redis": {
             *     "status": "down",
             *     "message": "Could not connect"
             *   }
             * }
             */
            details?: {
              [key: string]: {
                status?: string;
                [key: string]: string | undefined;
              };
            };
          };
        };
      };
    };
  };
}
